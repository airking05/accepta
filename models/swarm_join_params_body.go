// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SwarmJoinParamsBody swarm join params body
// swagger:model swarmJoinParamsBody
type SwarmJoinParamsBody struct {

	// Externally reachable address advertised to other nodes. This can either be an address/port combination in the form `192.168.1.1:4567`, or an interface followed by a port number, like `eth0:4567`. If the port number is omitted, the port number from the listen address is used. If `AdvertiseAddr` is not specified, it will be automatically detected when possible.
	AdvertiseAddr string `json:"AdvertiseAddr,omitempty"`

	// Address or interface to use for data path traffic (format: `<ip|interface>`), for example,  `192.168.1.1`,
	// or an interface, like `eth0`. If `DataPathAddr` is unspecified, the same address as `AdvertiseAddr`
	// is used.
	//
	// The `DataPathAddr` specifies the address that global scope network drivers will publish towards other
	// nodes in order to reach the containers running on this node. Using this parameter it is possible to
	// separate the container data traffic from the management traffic of the cluster.
	//
	DataPathAddr string `json:"DataPathAddr,omitempty"`

	// Secret token for joining this swarm.
	JoinToken string `json:"JoinToken,omitempty"`

	// Listen address used for inter-manager communication if the node gets promoted to manager, as well as determining the networking interface used for the VXLAN Tunnel Endpoint (VTEP).
	ListenAddr string `json:"ListenAddr,omitempty"`

	// Addresses of manager nodes already participating in the swarm.
	RemoteAddrs string `json:"RemoteAddrs,omitempty"`
}

// Validate validates this swarm join params body
func (m *SwarmJoinParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *SwarmJoinParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SwarmJoinParamsBody) UnmarshalBinary(b []byte) error {
	var res SwarmJoinParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
