// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// SystemEventsOKBody system events o k body
// swagger:model systemEventsOKBody
type SystemEventsOKBody struct {

	// The type of event
	Action string `json:"Action,omitempty"`

	// actor
	Actor *SystemEventsOKBodyActor `json:"Actor,omitempty"`

	// The type of object emitting the event
	Type string `json:"Type,omitempty"`

	// Timestamp of event
	Time int64 `json:"time,omitempty"`

	// Timestamp of event, with nanosecond accuracy
	TimeNano int64 `json:"timeNano,omitempty"`
}

// Validate validates this system events o k body
func (m *SystemEventsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActor(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SystemEventsOKBody) validateActor(formats strfmt.Registry) error {

	if swag.IsZero(m.Actor) { // not required
		return nil
	}

	if m.Actor != nil {

		if err := m.Actor.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Actor")
			}
			return err
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SystemEventsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemEventsOKBody) UnmarshalBinary(b []byte) error {
	var res SystemEventsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
