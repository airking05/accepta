// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// TaskSpecContainerSpecPrivilegesCredentialSpec CredentialSpec for managed service account (Windows only)
// swagger:model taskSpecContainerSpecPrivilegesCredentialSpec
type TaskSpecContainerSpecPrivilegesCredentialSpec struct {

	// Load credential spec from this file. The file is read by the daemon, and must be present in the
	// `CredentialSpecs` subdirectory in the docker data directory, which defaults to
	// `C:\ProgramData\Docker\` on Windows.
	//
	// For example, specifying `spec.json` loads `C:\ProgramData\Docker\CredentialSpecs\spec.json`.
	//
	// <p><br /></p>
	//
	// > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.
	//
	File string `json:"File,omitempty"`

	// Load credential spec from this value in the Windows registry. The specified registry value must be
	// located in:
	//
	// `HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Virtualization\Containers\CredentialSpecs`
	//
	// <p><br /></p>
	//
	//
	// > **Note**: `CredentialSpec.File` and `CredentialSpec.Registry` are mutually exclusive.
	//
	Registry string `json:"Registry,omitempty"`
}

// Validate validates this task spec container spec privileges credential spec
func (m *TaskSpecContainerSpecPrivilegesCredentialSpec) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *TaskSpecContainerSpecPrivilegesCredentialSpec) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TaskSpecContainerSpecPrivilegesCredentialSpec) UnmarshalBinary(b []byte) error {
	var res TaskSpecContainerSpecPrivilegesCredentialSpec
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
