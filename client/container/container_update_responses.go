// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/go-docker-api-client/models"
)

// ContainerUpdateReader is a Reader for the ContainerUpdate structure.
type ContainerUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewContainerUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewContainerUpdateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewContainerUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContainerUpdateOK creates a ContainerUpdateOK with default headers values
func NewContainerUpdateOK() *ContainerUpdateOK {
	return &ContainerUpdateOK{}
}

/*ContainerUpdateOK handles this case with default header values.

The container has been updated.
*/
type ContainerUpdateOK struct {
	Payload *models.ContainerUpdateOKBody
}

func (o *ContainerUpdateOK) Error() string {
	return fmt.Sprintf("[POST /containers/{id}/update][%d] containerUpdateOK  %+v", 200, o.Payload)
}

func (o *ContainerUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerUpdateOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerUpdateNotFound creates a ContainerUpdateNotFound with default headers values
func NewContainerUpdateNotFound() *ContainerUpdateNotFound {
	return &ContainerUpdateNotFound{}
}

/*ContainerUpdateNotFound handles this case with default header values.

no such container
*/
type ContainerUpdateNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ContainerUpdateNotFound) Error() string {
	return fmt.Sprintf("[POST /containers/{id}/update][%d] containerUpdateNotFound  %+v", 404, o.Payload)
}

func (o *ContainerUpdateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerUpdateInternalServerError creates a ContainerUpdateInternalServerError with default headers values
func NewContainerUpdateInternalServerError() *ContainerUpdateInternalServerError {
	return &ContainerUpdateInternalServerError{}
}

/*ContainerUpdateInternalServerError handles this case with default header values.

server error
*/
type ContainerUpdateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ContainerUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /containers/{id}/update][%d] containerUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *ContainerUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
