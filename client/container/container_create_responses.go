// Code generated by go-swagger; DO NOT EDIT.

package container

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/go-docker-api-client/models"
)

// ContainerCreateReader is a Reader for the ContainerCreate structure.
type ContainerCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewContainerCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewContainerCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewContainerCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewContainerCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewContainerCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewContainerCreateCreated creates a ContainerCreateCreated with default headers values
func NewContainerCreateCreated() *ContainerCreateCreated {
	return &ContainerCreateCreated{}
}

/*ContainerCreateCreated handles this case with default header values.

Container created successfully
*/
type ContainerCreateCreated struct {
	Payload *models.ContainerCreateCreatedBody
}

func (o *ContainerCreateCreated) Error() string {
	return fmt.Sprintf("[POST /containers/create][%d] containerCreateCreated  %+v", 201, o.Payload)
}

func (o *ContainerCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContainerCreateCreatedBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerCreateBadRequest creates a ContainerCreateBadRequest with default headers values
func NewContainerCreateBadRequest() *ContainerCreateBadRequest {
	return &ContainerCreateBadRequest{}
}

/*ContainerCreateBadRequest handles this case with default header values.

bad parameter
*/
type ContainerCreateBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *ContainerCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /containers/create][%d] containerCreateBadRequest  %+v", 400, o.Payload)
}

func (o *ContainerCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerCreateNotFound creates a ContainerCreateNotFound with default headers values
func NewContainerCreateNotFound() *ContainerCreateNotFound {
	return &ContainerCreateNotFound{}
}

/*ContainerCreateNotFound handles this case with default header values.

no such container
*/
type ContainerCreateNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ContainerCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /containers/create][%d] containerCreateNotFound  %+v", 404, o.Payload)
}

func (o *ContainerCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerCreateConflict creates a ContainerCreateConflict with default headers values
func NewContainerCreateConflict() *ContainerCreateConflict {
	return &ContainerCreateConflict{}
}

/*ContainerCreateConflict handles this case with default header values.

conflict
*/
type ContainerCreateConflict struct {
	Payload *models.ErrorResponse
}

func (o *ContainerCreateConflict) Error() string {
	return fmt.Sprintf("[POST /containers/create][%d] containerCreateConflict  %+v", 409, o.Payload)
}

func (o *ContainerCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerCreateInternalServerError creates a ContainerCreateInternalServerError with default headers values
func NewContainerCreateInternalServerError() *ContainerCreateInternalServerError {
	return &ContainerCreateInternalServerError{}
}

/*ContainerCreateInternalServerError handles this case with default header values.

server error
*/
type ContainerCreateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ContainerCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /containers/create][%d] containerCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *ContainerCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
