// Code generated by go-swagger; DO NOT EDIT.

package image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/accepta/models"
)

// ImageHistoryReader is a Reader for the ImageHistory structure.
type ImageHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ImageHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewImageHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewImageHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewImageHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewImageHistoryOK creates a ImageHistoryOK with default headers values
func NewImageHistoryOK() *ImageHistoryOK {
	return &ImageHistoryOK{}
}

/*ImageHistoryOK handles this case with default header values.

List of image layers
*/
type ImageHistoryOK struct {
	Payload models.ImageHistoryOKBody
}

func (o *ImageHistoryOK) Error() string {
	return fmt.Sprintf("[GET /images/{name}/history][%d] imageHistoryOK  %+v", 200, o.Payload)
}

func (o *ImageHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageHistoryNotFound creates a ImageHistoryNotFound with default headers values
func NewImageHistoryNotFound() *ImageHistoryNotFound {
	return &ImageHistoryNotFound{}
}

/*ImageHistoryNotFound handles this case with default header values.

No such image
*/
type ImageHistoryNotFound struct {
	Payload *models.ErrorResponse
}

func (o *ImageHistoryNotFound) Error() string {
	return fmt.Sprintf("[GET /images/{name}/history][%d] imageHistoryNotFound  %+v", 404, o.Payload)
}

func (o *ImageHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewImageHistoryInternalServerError creates a ImageHistoryInternalServerError with default headers values
func NewImageHistoryInternalServerError() *ImageHistoryInternalServerError {
	return &ImageHistoryInternalServerError{}
}

/*ImageHistoryInternalServerError handles this case with default header values.

Server error
*/
type ImageHistoryInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *ImageHistoryInternalServerError) Error() string {
	return fmt.Sprintf("[GET /images/{name}/history][%d] imageHistoryInternalServerError  %+v", 500, o.Payload)
}

func (o *ImageHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
