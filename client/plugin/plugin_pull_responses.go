// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/go-docker-api-client/models"
)

// PluginPullReader is a Reader for the PluginPull structure.
type PluginPullReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PluginPullReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPluginPullNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewPluginPullInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPluginPullNoContent creates a PluginPullNoContent with default headers values
func NewPluginPullNoContent() *PluginPullNoContent {
	return &PluginPullNoContent{}
}

/*PluginPullNoContent handles this case with default header values.

no error
*/
type PluginPullNoContent struct {
}

func (o *PluginPullNoContent) Error() string {
	return fmt.Sprintf("[POST /plugins/pull][%d] pluginPullNoContent ", 204)
}

func (o *PluginPullNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPluginPullInternalServerError creates a PluginPullInternalServerError with default headers values
func NewPluginPullInternalServerError() *PluginPullInternalServerError {
	return &PluginPullInternalServerError{}
}

/*PluginPullInternalServerError handles this case with default header values.

server error
*/
type PluginPullInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PluginPullInternalServerError) Error() string {
	return fmt.Sprintf("[POST /plugins/pull][%d] pluginPullInternalServerError  %+v", 500, o.Payload)
}

func (o *PluginPullInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
