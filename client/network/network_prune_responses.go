// Code generated by go-swagger; DO NOT EDIT.

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/go-docker-api-client/models"
)

// NetworkPruneReader is a Reader for the NetworkPrune structure.
type NetworkPruneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NetworkPruneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewNetworkPruneOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewNetworkPruneInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNetworkPruneOK creates a NetworkPruneOK with default headers values
func NewNetworkPruneOK() *NetworkPruneOK {
	return &NetworkPruneOK{}
}

/*NetworkPruneOK handles this case with default header values.

No error
*/
type NetworkPruneOK struct {
	Payload *models.NetworkPruneOKBody
}

func (o *NetworkPruneOK) Error() string {
	return fmt.Sprintf("[POST /networks/prune][%d] networkPruneOK  %+v", 200, o.Payload)
}

func (o *NetworkPruneOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkPruneOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNetworkPruneInternalServerError creates a NetworkPruneInternalServerError with default headers values
func NewNetworkPruneInternalServerError() *NetworkPruneInternalServerError {
	return &NetworkPruneInternalServerError{}
}

/*NetworkPruneInternalServerError handles this case with default header values.

Server error
*/
type NetworkPruneInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *NetworkPruneInternalServerError) Error() string {
	return fmt.Sprintf("[POST /networks/prune][%d] networkPruneInternalServerError  %+v", 500, o.Payload)
}

func (o *NetworkPruneInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
