// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/airking05/go-docker-api-client/models"
)

// SecretCreateReader is a Reader for the SecretCreate structure.
type SecretCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SecretCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewSecretCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewSecretCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSecretCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewSecretCreateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSecretCreateCreated creates a SecretCreateCreated with default headers values
func NewSecretCreateCreated() *SecretCreateCreated {
	return &SecretCreateCreated{}
}

/*SecretCreateCreated handles this case with default header values.

no error
*/
type SecretCreateCreated struct {
	Payload *models.IDResponse
}

func (o *SecretCreateCreated) Error() string {
	return fmt.Sprintf("[POST /secrets/create][%d] secretCreateCreated  %+v", 201, o.Payload)
}

func (o *SecretCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IDResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretCreateConflict creates a SecretCreateConflict with default headers values
func NewSecretCreateConflict() *SecretCreateConflict {
	return &SecretCreateConflict{}
}

/*SecretCreateConflict handles this case with default header values.

name conflicts with an existing object
*/
type SecretCreateConflict struct {
	Payload *models.ErrorResponse
}

func (o *SecretCreateConflict) Error() string {
	return fmt.Sprintf("[POST /secrets/create][%d] secretCreateConflict  %+v", 409, o.Payload)
}

func (o *SecretCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretCreateInternalServerError creates a SecretCreateInternalServerError with default headers values
func NewSecretCreateInternalServerError() *SecretCreateInternalServerError {
	return &SecretCreateInternalServerError{}
}

/*SecretCreateInternalServerError handles this case with default header values.

server error
*/
type SecretCreateInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *SecretCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /secrets/create][%d] secretCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *SecretCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSecretCreateServiceUnavailable creates a SecretCreateServiceUnavailable with default headers values
func NewSecretCreateServiceUnavailable() *SecretCreateServiceUnavailable {
	return &SecretCreateServiceUnavailable{}
}

/*SecretCreateServiceUnavailable handles this case with default header values.

node is not part of a swarm
*/
type SecretCreateServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *SecretCreateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /secrets/create][%d] secretCreateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *SecretCreateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
